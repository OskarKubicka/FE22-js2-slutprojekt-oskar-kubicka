{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7cbb0fc57cd67911.js","src/modules/firebase.ts","node_modules/@parcel/runtime-js/lib/runtime-8dd5a16c3bad9ea7.js","node_modules/@parcel/runtime-js/lib/runtime-f8212cb793154c58.js","node_modules/@parcel/runtime-js/lib/runtime-8ba700dd964c8259.js","src/modules/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"kD17M\\\":\\\"index.fec2cda2.js\\\",\\\"98rEQ\\\":\\\"Asset2.531f19a3.png\\\",\\\"1bQjt\\\":\\\"Asset3.9c3a8e9d.png\\\",\\\"ST812\\\":\\\"Asset4.faead686.png\\\"}\"));","import { User } from \"./type.ts\"\r\n//import { formCreate , formLogIn} from \"./index.ts\"   ///.ts?\r\n\r\nconst img1profile: HTMLImageElement = document.createElement('img')\r\nconst imgUrl1Profile = new URL('../img/Asset2.png', import.meta.url);\r\nimg1profile.src = imgUrl1Profile.href;\r\nconst img2profile: HTMLImageElement = document.createElement('img')\r\nconst imgUrl2Profile = new URL('../img/Asset3.png', import.meta.url);\r\nimg2profile.src = imgUrl2Profile.href;\r\nconst img3profile: HTMLImageElement = document.createElement('img')\r\nconst imgUrl3Profile = new URL('../img/Asset4.png', import.meta.url);\r\nimg3profile.src = imgUrl3Profile.href;\r\n\r\nasync function getUsers(): Promise<User[]> {\r\n    const url: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users.json`\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n   \r\n    return data\r\n}\r\n\r\n\r\n/////////////skapa användare firebase används på index.ts\r\nasync function putUser(obj: object, index: number) {\r\n    const urlPut: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`\r\n    const init: Object = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n            'Content-type': \"application/json;charset=UTF-8\"\r\n        }\r\n    };\r\n    const response = await fetch(urlPut, init);\r\n    const data = await response.json();\r\n\r\n}\r\n\r\n\r\n//////////////Profilesidans firebase funktioner\r\n\r\n//dessa funktioner använder put metoden och kallas på i profile- de utför Put i databasen för nya statusar och antal likes(counter)\r\nasync function putStatus(objStatus: object, index: number): Promise<void> {\r\n    const urlPutStatus: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/status.json`\r\n    const init: Object = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(objStatus),\r\n        headers: {\r\n            'Content-type': \"application/json;charset=UTF-8\"\r\n        }\r\n    };\r\n    const response = await fetch(urlPutStatus, init);\r\n    const data = await response.json();\r\n\r\n}\r\nasync function putCounter(objToPutForCount: object, index: number): Promise<void> {\r\n    const urlPutStatus: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/counter.json`\r\n    const init: Object = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(objToPutForCount),\r\n        headers: {\r\n            'Content-type': \"application/json;charset=UTF-8\"\r\n        }\r\n    };\r\n    const response = await fetch(urlPutStatus, init);\r\n    const data = await response.json();\r\n\r\n}\r\n///DELETE USER FUNCTIONS\r\nasync function deleteUserFirebase(index: number) {\r\n    const urlDelete: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users/${index}.json`\r\n    const init: Object = {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-type': \"application/json;charset=UTF-8\"\r\n        }\r\n    };\r\n    const response = await fetch(urlDelete, init);\r\n    const data = await response.json();\r\n}\r\n\r\nasync function putFirebase(objZero: object): Promise<void> {\r\n    const urlPutZero: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/.json`\r\n    const init: Object = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(objZero),\r\n        headers: {\r\n            'Content-type': \"application/json;charset=UTF-8\"\r\n        }\r\n    };\r\n    const response = await fetch(urlPutZero, init);\r\n    const data = await response.json();\r\n\r\n}\r\n\r\n//after delete\r\nasync function getUsersAfterDelete(): Promise<[User | null]> {\r\n    const url: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users.json`\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    return data\r\n}\r\n\r\nfunction newUserList(listData: [User | null]): void {\r\n    listData.splice(listData.indexOf(null), 1)\r\n    putNewArr(listData)\r\n    async function putNewArr(listData: [User | null]): Promise<void> {\r\n        const urlPutAll: string = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users.json`\r\n        const init: Object = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(listData),\r\n            headers: {\r\n                'Content-type': \"application/json;charset=UTF-8\"\r\n            }\r\n        };\r\n        const response = await fetch(urlPutAll, init);\r\n        const data = await response.json();\r\n\r\n    }\r\n}\r\n\r\n//Usepage\r\n\r\nasync function changeNumberOfLikes(index: number, i: number, count: number) {\r\n\r\n    const url = `https://slutprojekt-js2-oskar-default-rtdb.europe-west1.firebasedatabase.app/users/${index}/counter.json`;\r\n    const init = {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({ [i]: count + 1 }),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8'\r\n        }\r\n    }\r\n\r\n\r\n    await fetch(url, init);\r\n}\r\n\r\n\r\nexport { getUsers, putUser, newUserList, getUsersAfterDelete, deleteUserFirebase, putFirebase, putStatus, putCounter, changeNumberOfLikes }","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"98rEQ\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1bQjt\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"ST812\")).toString();","import { User } from \"./type.ts\"\nimport { getUsers, putUser } from \"./firebase.ts\"\n\n\nconst formCreate: HTMLElement | null = document.getElementById('create-form')\nconst formLogIn: HTMLElement | null = document.getElementById('logga-in')\nconst img1div: HTMLElement | null = document.getElementById('img-1-div')\nconst img2div: HTMLElement | null = document.getElementById('img-2-div')\nconst img3div: HTMLElement | null = document.getElementById('img-3-div')\nconst newAccount: HTMLElement | null = document.getElementById('nytt-konto');\nif (newAccount) newAccount.addEventListener('click', () => {\n    if (formCreate && formLogIn) {\n        formCreate.style.display = \"flex\"\n        formCreate.style.flexFlow = \"column\";\n        newAccount.style.display = \"none\"\n        formLogIn.style.display = \"none\"\n    }\n})\n\nif (formCreate && img1div && img2div && img3div) {\n    const img1: HTMLImageElement = document.createElement('img')\n    img1div.append(img1)\n    const imgUrl1 = new URL('../img/Asset2.png', import.meta.url);\n    img1.src = imgUrl1.href;\n    img1.setAttribute(\"class\", \"img\")\n    const img2: HTMLImageElement = document.createElement('img')\n    img2div.append(img2)\n    const imgUrl2 = new URL('../img/Asset3.png', import.meta.url);\n    img2.src = imgUrl2.href;\n    img2.setAttribute(\"class\", \"img\")\n    const img3: HTMLImageElement = document.createElement('img')\n    img3div.append(img3)\n    const imgUrl3 = new URL('../img/Asset4.png', import.meta.url);\n    img3.src = imgUrl3.href;\n    img3.setAttribute(\"class\", \"img\")\n}\n\n\ngetUsers().then(createUser)\n\ngetUsers().then(logIn)\n\nfunction createUser(totalUsers: User[]): void {\n\n    //längden på arrayen för att se vilken plats ny användare ska in på\n\n    let lengthUse: number = totalUsers.length\n\n    ///jämför om användaren redan finns\n    const nameArr: string[] = [];\n\n    if (totalUsers.length != 0) {\n        totalUsers.forEach(element => {\n\n            nameArr.push(element.username)\n        })\n    }\n\n    if (formCreate) {\n        formCreate.addEventListener('submit', event => {\n            event.preventDefault();\n\n            const target: HTMLElement = event.target as HTMLElement;\n            if (target) {\n\n\n                const userName: string = target[0].value\n                const password: string = target[1].value\n                let imgUrl: string = ''\n                if (target[2].checked) {\n                    imgUrl = target[2].value\n                }\n                else if (target[3].checked) {\n                    imgUrl = target[3].value\n                }\n                else if (target[4].checked) {\n                    imgUrl = target[4].value\n                }\n\n\n                let newUser: Object = {\n                    username: userName,\n                    password: password,\n                    status: [0],\n                    url: imgUrl,\n                    counter: [0]\n                }\n\n\n                if (userName) {\n\n                    if (nameArr.includes(userName) == false) {\n                        putUser(newUser, lengthUse)\n\n                        setTimeout(() => {\n\n                            location.reload();\n                        }, 300)\n                    }\n                    else {\n                        alert('Det finns redan en användare med det namnet')\n                    }\n\n                }\n\n            }\n        }\n        )\n    }\n}\n\nfunction logIn(allUsers: User[]): void {\n\n    ///lägger alla användares namn och lösen i varsin array\n    const nameArr: string[] = [];\n    const passArr: string[] = [];\n    if (allUsers.length != 0) {\n        allUsers.forEach(element => {\n            nameArr.push(element.username)\n            passArr.push(element.password)\n        })\n    }\n\n\n    if (formLogIn) {\n        formLogIn.addEventListener('submit', event => {\n            event.preventDefault();\n\n            const target: HTMLElement = event.target as HTMLElement;\n            if (target) {\n\n                \n                let userName = target[0].value\n                let passWord = target[1].value\n\n                if (userName) {\n                    //om namnarrayen innehåller nuvarande inloggsnamn:\n                    if (nameArr.includes(userName) == true) {\n\n                        if (passWord == passArr[nameArr.indexOf(userName)]) {\n\n                            localStorage.setItem('user', userName)\n\n                            window.location.assign(\"./html/profile.html\")\n                        }\n                        else alert('fel lösenord')\n                    }\n                    else {\n                        alert('användaren finns inte')\n                    }\n                }\n            }\n        })\n    }\n}\n\n\n//export {formCreate, formLogIn}\n\n"],"names":["$877624b6c2eacb75$export$6503ec6e8aabbaf","$877624b6c2eacb75$export$f7ad0328861e2f03","$877624b6c2eacb75$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$26e1e8cf4490489d$var$img1profile","document","createElement","$9fb05da310ac5e38$exports","URL","resolve","url","toString","$26e1e8cf4490489d$var$imgUrl1Profile","src","href","$26e1e8cf4490489d$var$img2profile","$4ee529f93bd02dd7$exports","$26e1e8cf4490489d$var$imgUrl2Profile","$26e1e8cf4490489d$var$img3profile","$53e83e5bdd853adb$exports","$26e1e8cf4490489d$var$imgUrl3Profile","async","$26e1e8cf4490489d$export$925a4945a6cd0f3e","response","fetch","json","$26e1e8cf4490489d$export$16edcaea489c14d3","obj","index","urlPut","init","method","body","stringify","headers","$88aa17fd818eb7ff$var$formCreate","getElementById","$88aa17fd818eb7ff$var$formLogIn","$88aa17fd818eb7ff$var$img1div","$88aa17fd818eb7ff$var$img2div","$88aa17fd818eb7ff$var$img3div","$88aa17fd818eb7ff$var$newAccount","addEventListener","style","display","flexFlow","img1","append","imgUrl1","setAttribute","img2","imgUrl2","img3","imgUrl3","then","totalUsers","lengthUse","nameArr","forEach","element","push","username","event","preventDefault","target","userName","value","password","imgUrl","checked","newUser","status","counter","includes","setTimeout","location","reload","alert","allUsers","passArr","passWord","indexOf","localStorage","setItem","window","assign"],"version":3,"file":"index.fec2cda2.js.map"}